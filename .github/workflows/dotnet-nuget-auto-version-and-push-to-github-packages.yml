name: Build NuGet and push to GitHub Packages

on:
  workflow_call:
    inputs:
      project-name:
        required: true
        type: string
    secrets:
      packages-access-token:
        required: true

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  build:
    name: Build NuGet and push to GitHub Packages
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Get common repo
        uses: actions/checkout@v3
        with:
          repository: defra-cdp-sandpit/cdp-workflows
          path: temp_scripts

      - name: Create nuget.config contents from secret
        run: |
          bash temp_scripts/scripts/create_nuget_config.sh ${{ secrets.nuget-config-including-pat }}

      - name: Restore dependencies
        run: dotnet restore ./${{ inputs.project-name }}.sln

      - name: Build
        run: dotnet build ./${{ inputs.project-name }}.sln --no-restore

      - name: Test
        run: dotnet test ./${{ inputs.project-name }}.sln --no-build --verbosity normal

      - name: Automatic Tagging of Releases part 1
        id: latest-git-tag
        run: |
          bash temp_scripts/scripts/git_latest.sh

      - name: Automatic Tagging of Releases part 2
        id: increment-git-tag
        run: |
          bash temp_scripts/scripts/git_update.sh -v ${{ steps.latest-git-tag.outputs.CURRENT-GIT-TAG }} -f ${{ steps.latest-git-tag.outputs.GIT-TAG-FOUND}}

      - name: Add Nuget Source
        run: dotnet nuget add source --username USERNAME --password ${{ secrets.packages-access-token }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/defra-cdp-sandpit/index.json"

      - name: Pack Nuget
        run: dotnet pack -p:Version=${{ steps.increment-git-tag.outputs.GIT-TAG }} -c Release

      - name: Publish Nuget to GitHub registry
        run: |
          dotnet nuget push \
          ./${{ inputs.project-name }}/bin/Release/${{ inputs.project-name }}.${{ steps.increment-git-tag.outputs.GIT-TAG }}.nupkg \
          --api-key ${{ secrets.packages-access-token }} \
          --source "github" \
          --skip-duplicate \
          --no-symbols 

      - name: Cleanup - remove nuget.config as it contains sensitive info
        if: always()
        run: |
          bash temp_scripts/scripts/remove_nuget_config.sh
